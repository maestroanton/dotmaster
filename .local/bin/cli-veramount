#!/bin/sh

### FUNCTIONS ###

error(){ # Logs to stderr an exits with error status
	printf "%s\n" "$1" >&2
	exit 1
}

### MAIN CODE ###

while getopts "du" ARG; do 
	case $ARG in 
		d) VOLUME_PATH='/home/anton/Downloads/cont'; MOUNT_POINT='/home/anton/Downloads/necrobutcher' ;;
		u) UMOUNT='1' ;;
	esac
done

# Defining essential variables.

[ -z $VOLUME_PATH ] && read -p 'Volume path: ' VOLUME_PATH 
[ -z $MOUNT_POINT ] && read -p 'Mount point: ' MOUNT_POINT
[ -z $UMOUNT ] && read -sp "Password: " PASSWD ; printf "\n" 

# Dismount if UMOUNT is true

[[ $UMOUNT == '1' ]] && veracrypt -d $VOLUME_PATH &>/dev/null && echo "Dismounted." && exit 1 

# Mounting the volume 

echo "$PASSWD" | veracrypt -t --non-interactive --stdin $VOLUME_PATH $MOUNT_POINT &>/dev/null && echo "Exited with success." || error "Check password and the validity of paths. The device could also be already mounted."
